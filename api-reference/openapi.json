{
  "openapi": "3.0.3",
  "info": {
    "title": "ERM Public API",
    "version": "1.0.0",
    "description": "API for Employee Resource Management"
  },
  "servers": [
    {
      "url": "https://core.ermbot.xyz",
      "description": "ERM API Server"
    }
  ],
  "paths": {
    "/api/v1/shifts": {
      "get": {
        "summary": "Get all shifts",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of shifts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shifts/search": {
      "get": {
        "summary": "Search shifts",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nickname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_epoch",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float" 
            }
          },
          {
            "name": "end_epoch",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "breaks",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "moderations",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "added_time",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "removed_time",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShiftResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderations": {
      "get": {
        "summary": "Get all moderations",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of moderations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moderations/search": {
      "get": {
        "summary": "Search moderations",
        "parameters": [
          {
            "name": "snowflake",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moderator",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moderator_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "epoch",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "until_epoch",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leaves": {
      "get": {
        "summary": "Get all leaves",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of leaves",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leaves/search": {
      "get": {
        "summary": "Search leaves",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expiry",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "expired",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accepted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "denied",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "voided",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/token": {
      "post": {
        "summary": "Generate auth token",
        "parameters": [
          {
            "name": "guild_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generated token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "guildHeader": {
        "name": "guild",
        "in": "header",
        "required": true,
        "description": "Discord Guild ID",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ShiftResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$oid": {
                      "type": "string"
                    }
                  }
                },
                "username": {
                  "type": "string"
                },
                "nickname": {
                  "type": "string"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "type_": {
                  "type": "string"
                },
                "start_epoch": {
                  "type": "number",
                  "format": "float"
                },
                "breaks": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "guild": {
                  "type": "integer",
                  "format": "int64"
                },
                "moderations": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "added_time": {
                  "type": "integer"
                },
                "removed_time": {
                  "type": "integer"
                },
                "end_epoch": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "next_cursor": {
                "type": "number",
                "format": "float"
              },
              "limit": {
                "type": "integer"
              },
              "has_more": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "ModerationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$oid": {
                      "type": "string"
                    }
                  }
                },
                "user_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "type": "string"
                },
                "guild": {
                  "type": "integer",
                  "format": "int64"
                },
                "type_": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                },
                "moderator": {
                  "type": "string"
                },
                "moderator_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "epoch": {
                  "type": "integer",
                  "format": "int64"
                },
                "until_epoch": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "next_cursor": {
                "type": "integer",
                "format": "int64"
              },
              "limit": {
                "type": "integer"
              },
              "has_more": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "LoaResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "object",
                  "properties": {
                    "$oid": {
                      "type": "string"
                    }
                  }
                },
                "user_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "reason": {
                  "type": "string"
                },
                "message_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "type_": {
                  "type": "string"
                },
                "guild": {
                  "type": "integer",
                  "format": "int64"
                },
                "expiry": {
                  "type": "integer",
                  "format": "int64"
                },
                "expired": {
                  "type": "boolean"
                },
                "accepted": {
                  "type": "boolean"
                },
                "denied": {
                  "type": "boolean"
                },
                "voided": {
                  "type": "boolean"
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "next_cursor": {
                "type": "integer",
                "format": "int64"
              },
              "limit": {
                "type": "integer"
              },
              "has_more": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      },
      "GuildAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Guild"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": [],
      "GuildAuth": []
    }
  ]
}